steps:

#  - task: replace-variables-in-file@1
#    displayName: Set vars in file:env code
#    inputs:
#      filepath: "${{ parameters.workPath }}/.env"
#      endWithNewLine: true
#      verbose: true 
      
  - task: CmdLine@2
    displayName: "Install requirements and run tests"
    inputs:
      script: |
        echo "==================================================="
        python$(pythonVersion) -m pipenv --rm
        echo "Installing requirements with python$(pythonVersion)"
        python$(pythonVersion) -m pipenv --python $(pythonVersion) run pip install -r tests/requirements.txt
        python$(pythonVersion) -m pipenv --python $(pythonVersion) run pip install pytest pytest-cov
        echo "==================================================="
        echo "Running tests with pytest"
        python$(pythonVersion) -m pipenv --python $(pythonVersion) run pytest --cov ./ --cov-report xml
      workingDirectory: ${{ parameters.workPath }}

  - task: SonarQubePrepare@5.13.0
    displayName: "SonarQube Prepare"
    inputs:
      SonarQube: "Sonar Qube"
      scannerMode: "CLI"
      configMode: "manual"
      cliProjectKey: ${{ parameters.repoName }}
      cliProjectName: ${{ parameters.repoName }}
      cliSources: ${{ parameters.workPath }}
      extraProperties: |
        sonar.branch.name=$(Build.SourceBranchName)
        sonar.exclusions=${{ parameters.testExclusion }}
        sonar.test.inclusions=${{ parameters.testInclusions }}
        sonar.python.coverage.reportPaths=${{ parameters.workPath }}/coverage.xml

  - task: SonarQubeAnalyze@5
    displayName: "SonarQube Analyze"

  - task: SonarQubePublish@5.0.2
    displayName: "SonarQube Publish"
    inputs:
      pollingTimeoutSec: "300"

  - task: sonar-buildbreaker@8
    displayName: "SonarQube Breaker"
    inputs:
      SonarQube: "Sonar Qube"
