AWSTemplateFormatVersion: 2010-09-09 
Description: Create Loadbalancer.
Parameters:
  stage:
    Type: String
    Default: dev
    AllowedValues:
      - pdn
      - uat
      - qa
      - dev
  project:
    Type: String
  loadBalancerPort:
    Type: Number
    Default: 80
  loadBalancerCertificate:
    Type: String
  publicLB:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'

Conditions:
  isPublicELB: !Equals 
    - !Ref publicLB
    - 'true'

Resources:

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'secg-${project}-${stage}-lb'
      GroupDescription: !Sub 'SG for LB ${project}-${stage}'
      VpcId: !ImportValue mainVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref loadBalancerPort
          ToPort: !Ref loadBalancerPort
          CidrIp: 10.0.0.0/8
      Tags:
        - Key: Name
          Value: !Sub 'secg-${project}-${stage}-lb'

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        # this is the default, but is specified here in case it needs to be changed
        - Key: idle_timeout.timeout_seconds
          Value: 60
        - Key: deletion_protection.enabled
          Value: true
        # - Key: access_logs.s3.enabled # Not necessary because logs are left through cloudtrail
        #   Value: true
        # - Key: access_logs.s3.bucket
        #   Value: btg.logging.services # The bucket must exist in the same region as the load balancer and have a bucket policy that grants Elastic Load Balancing permissions to write to the bucket.
        # - Key: access_logs.s3.prefix
        #   Value: !Sub '${project}/INFO_'
      Name: !Sub 'elb-${project}-${stage}'
      Scheme: !If [isPublicELB, 'internet-facing', 'internal']
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Subnets:
        - !ImportValue PrivateSubnet1ELB
        - !ImportValue PrivateSubnet2ELB
        - !ImportValue PrivateSubnet3ELB
      Tags:
        - Key: Name
          Value: !Sub 'elb-${project}-${stage}'

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - LoadBalancer    
    Properties:
      DefaultActions:
        - FixedResponseConfig: 
            StatusCode: 400
          Type: fixed-response
      LoadBalancerArn: !Ref LoadBalancer
      Port: !Ref loadBalancerPort
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS13-1-2-Ext2-2021-06 # ELBSecurityPolicy-TLS13-1-2-2021-06
      Certificates:
        - CertificateArn: !Ref loadBalancerCertificate

Outputs:
  LoadBalancerSecurityGroupId:
    Description: LoadBalancer Security Group Id
    Value: !Ref LoadBalancerSecurityGroup
  LoadBalancerListenerARN:
    Description: LoadBalancer Listener ARN
    Value: !Ref LoadBalancerListener
  LoadBalancerEndpoint:
    Description: Service Endpoint
    Value: !GetAtt LoadBalancer.DNSName